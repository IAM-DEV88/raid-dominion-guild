<div id="smoke-bkg" class="absolute z-[-1]"></div>
<!-- animate-blurred-fade-in -->
<script>
  import * as THREE from "three";

const $bkg = document.getElementById("smoke-bkg");
let w = window.innerWidth;
let h = window.innerHeight;
const scene = new THREE.Scene();

const camera = new THREE.PerspectiveCamera(75, w / h, 1, 1000);
camera.position.z = 500;
scene.add(camera);

const renderer = new THREE.WebGLRenderer({ alpha: true });
renderer.setSize(w, h);
renderer.setClearColor(0x000000, 0);

$bkg?.appendChild(renderer.domElement);

const smokeParticles: THREE.Mesh[] = [];
const loader = new THREE.TextureLoader();
loader.crossOrigin = "";

const midHeight = h * 40 / 100
loader.load("/smoke.webp", (texture) => {
  const smokeGeo = new THREE.PlaneGeometry(midHeight, midHeight);
  const NUM_OF_PARTICLES = 50;

  for (let p = 0; p < NUM_OF_PARTICLES; p++) {
    const smokeMaterial = new THREE.MeshBasicMaterial({
      map: texture,
      transparent: true,
      opacity: 0,
      color: 0x0088bc,
    });

    const particle = new THREE.Mesh(smokeGeo, smokeMaterial);

    particle.position.set(
      0,
      Math.random() * -50,
      Math.random() * 100 - -100
    );
    particle.rotation.z = Math.random() * 360 - -360;

    particle.userData.pulseOffset = Math.random() * 50;
    particle.userData.pulseSpeed = Math.random() * .1 - 1;
    particle.userData.rotationSpeed = Math.random() * 0.01 - 0.001;
    particle.userData.targetOpacity = 0.5;

    scene.add(particle);
    smokeParticles.push(particle);
  }

});

function resize() {
  w = window.innerWidth;
  h = window.innerHeight;
  camera.aspect = w / h;
  camera.updateProjectionMatrix();
  renderer.setSize(w, h);
}

function getRandomColor() {
  const randomNum = Math.random();
  if (randomNum < 0.15) {
    return new THREE.Color(0x1199cd);
  } else if (randomNum < 0.25) {
    return new THREE.Color(0x00aaff);
  } else if (randomNum < 0.5) {
    return new THREE.Color(0x0088bc);
  } else {
    return new THREE.Color(0x000000);
  }
}

let lastTime = 0;
const frameInterval = 1000 / 30; // Limitar FPS a 30 en escritorio

function animate(time:number) {
  if (time - lastTime >= frameInterval) {
    lastTime = time;
    const currentTime = Date.now() * 0.001;

    smokeParticles.forEach((particle) => {
      particle.rotation.z += particle.userData.rotationSpeed;

      const material = particle.material as THREE.MeshBasicMaterial;

      // Interpolaci√≥n suave hacia la opacidad objetivo
      material.opacity += (particle.userData.targetOpacity - material.opacity) * 0.05;

      // Pulso de opacidad individual
      const pulse = Math.sin(currentTime * particle.userData.pulseSpeed + particle.userData.pulseOffset) * 0.5 + 0.5;
      material.opacity = material.opacity * (0.5 + pulse * 0.5);

      // Cambio de color con el ritmo del pulso
      if (!particle.userData.baseColor) {
        particle.userData.baseColor = getRandomColor();
        particle.userData.targetColor = getRandomColor();
      }

      const colorPulse = Math.sin(currentTime * 0.5 + particle.userData.pulseOffset) * 0.5 + 0.5;
      material.color.lerpColors(
        particle.userData.baseColor,
        particle.userData.targetColor,
        colorPulse
      );

      // Cambio ocasional de color
      if (Math.random() < 0.005) {
        particle.userData.baseColor.copy(particle.userData.targetColor);
        particle.userData.targetColor = getRandomColor();
      }
    });

    renderer.render(scene, camera);
  }

  requestAnimationFrame(animate);
}

animate(0);

window.addEventListener("resize", resize);
</script>
